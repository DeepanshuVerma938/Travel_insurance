<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="9" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-28T18:02:01 IST" name="Default suite" finished-at="2024-02-28T18:05:56 IST" duration-ms="235367">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-02-28T18:02:01 IST" name="Default test" finished-at="2024-02-28T18:05:56 IST" duration-ms="235367">
      <class name="com.Insurance.testRunner.testRun">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" started-at="2024-02-28T18:02:01 IST" name="setUpClass" finished-at="2024-02-28T18:02:03 IST" duration-ms="2728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7097d921]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" started-at="2024-02-28T18:02:03 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-02-28T18:02:22 IST" duration-ms="18824" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Navigating the url of policybazaar"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["categorizing the features as smoke"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" started-at="2024-02-28T18:02:22 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-02-28T18:02:44 IST" duration-ms="21599" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Navigating to health insurance page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["categorizing the features as smoke"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Find top plans for you with up to 25% discount**] but found [Find top plans for you with up to ]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Find top plans for you with up to 25% discount**] but found [Find top plans for you with up to ]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.Insurance.PageObjects.HealthPage.checkhealthpage(HealthPage.java:204)
at com.travelInsurance.stepDefinitions.SmokeSteps.user_navigate_to_health_insurance_webpage(SmokeSteps.java:46)
at âœ½.user  navigate to healthInsurance webpage(file:///C:/Users/2303699/eclipse-workspace/Hack/./Features/InsuranceSmoke.feature:13)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" started-at="2024-02-28T18:02:44 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-02-28T18:03:02 IST" duration-ms="18461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Navigating to CarInsurance page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["categorizing the features as smoke"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" started-at="2024-02-28T18:03:02 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-02-28T18:03:22 IST" duration-ms="19724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Navigating to HomeInsurance page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["categorizing the features as smoke"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" started-at="2024-02-28T18:03:22 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-02-28T18:03:39 IST" duration-ms="16514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Navigating to TermLifeInsurance page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["categorizing the features as smoke"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" started-at="2024-02-28T18:03:39 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-02-28T18:03:55 IST" duration-ms="16250" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Navigating to Retirement Plan"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["categorizing the features as smoke"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: stale element not found
  (Session info: chrome=120.0.6099.130)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fd547fcf1e82c2250bb2ca55130bbcb4, isElementDisplayed {id=8050EF94EB6C232E3E3D6F3E3FAA0EE3_element_71}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.130, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Windows\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50151}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50151/devtoo..., se:cdpVersion: 120.0.6099.130, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (fd547fcf1e82c2250bb2ca55130bbcb4)] -> xpath: //span[@class='brktext']]
Session ID: fd547fcf1e82c2250bb2ca55130bbcb4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: stale element not found
  (Session info: chrome=120.0.6099.130)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fd547fcf1e82c2250bb2ca55130bbcb4, isElementDisplayed {id=8050EF94EB6C232E3E3D6F3E3FAA0EE3_element_71}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.130, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Windows\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50151}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50151/devtoo..., se:cdpVersion: 120.0.6099.130, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (fd547fcf1e82c2250bb2ca55130bbcb4)] -> xpath: //span[@class='brktext']]
Session ID: fd547fcf1e82c2250bb2ca55130bbcb4
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:185)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:134)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:282)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.isDisplayed(Unknown Source)
at com.Insurance.PageObjects.SmokePage.getRetirementPage(SmokePage.java:105)
at com.travelInsurance.stepDefinitions.SmokeSteps.user_should_navigate_to_retirement_plans_webpage(SmokeSteps.java:86)
at âœ½.user should navigate to RetirementPlans webpage(file:///C:/Users/2303699/eclipse-workspace/Hack/./Features/InsuranceSmoke.feature:37)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" started-at="2024-02-28T18:03:55 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-02-28T18:04:10 IST" duration-ms="15669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Navigating to child savings plan"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["categorizing the features as smoke"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" started-at="2024-02-28T18:04:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-02-28T18:04:29 IST" duration-ms="18124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Navigating to FamilyInsurance Plan"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["categorizing the features as smoke"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" started-at="2024-02-28T18:04:29 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-02-28T18:04:49 IST" duration-ms="20666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Scrolling functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["categorizing the features as smoke"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" started-at="2024-02-28T18:04:49 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-02-28T18:05:12 IST" duration-ms="23121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Log in functionality with invalid phonenumber"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["categorizing the features as smoke"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" started-at="2024-02-28T18:05:12 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-02-28T18:05:51 IST" duration-ms="38502" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Log in functionality with invalid phonenumber"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["categorizing the features as smoke"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.Insurance.testRunner.testRun@6f204a1a]" started-at="2024-02-28T18:05:51 IST" name="tearDownClass" finished-at="2024-02-28T18:05:56 IST" duration-ms="5037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.Insurance.testRunner.testRun -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
